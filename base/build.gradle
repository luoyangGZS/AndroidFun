plugins {
    // 当成组件库
    id 'com.android.library'
    // 独立应用
    // id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 32

    defaultConfig {
        // 独立应用时打开
//        applicationId "com.luoyang.base"
        minSdk 29
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //接入友盟统计
    // 友盟统计SDK
    implementation 'com.umeng.umsdk:common:9.5.0'// 必选
    implementation 'com.umeng.umsdk:asms:1.6.3'// 必选
    implementation 'com.umeng.umsdk:apm:1.7.0' // 错误分析升级为独立SDK，看crash数据请一定集成，可选


    //Kotlin 的 Coroutine 并没有包含在原有包装中，而是以 Support Library 的形式提供开发者使用，所以需要另外导入该 Library
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    //因为是在 Android 上使用的， Android 上头的 main thread 跟普通 java 有点不一样
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    // lifecycle
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
}